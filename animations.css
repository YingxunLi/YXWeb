body.no-scroll {
    overflow: hidden;
}

#skill-bowl-container {
    position: absolute;
    /* top: 2150px; */ /* 由 wrapper 控制 */
    left: 0;
    bottom: 0; /* 定位在 wrapper 底部 */
    width: 400px;
    height: 200px; /* 碗的高度 */
    pointer-events: none;
    /* 移除，因为碗现在是 wrapper 的一部分 */
}

#skill-circle-wrapper {
    position: absolute;
    top: 2050px; /* 调整整体位置 */
    left: 50%;
    transform: translateX(-50%);
    width: 400px;
    height: 400px; /* 完整圆形的高度 */
    opacity: 0;
    transition: opacity 0.5s ease;
}

#skill-bowl-lid {
    position: absolute;
    top: 0;
    left: 0;
    width: 400px;
    height: 200px;
    background-color: var(--color-black);
    border-top-left-radius: 200px;
    border-top-right-radius: 200px;
    transform-origin: 0% 100%; /* 设置旋转中心为左下角 */
    transform: rotate(-135deg); /* 初始打开状态 */
    opacity: 1; /* 初始可见 */
    z-index: 120; /* 确保盖子在最上层 */
}

#skill-bowl-lid.closing {
    /* 微调点 1: 盖子关闭动画 */
    /* 尝试修改时长(1.2s)或速度曲线(cubic-bezier) */
    animation: close-lid 1.2s ease-in-out forwards; /* 示例：换成更平滑的 ease-in-out */
}

@keyframes close-lid {
    from {
        transform: rotate(-135deg);
    }
    to {
        transform: rotate(0deg);
    }
}

/* 人形图标相关样式 */
#person-body {
    position: absolute;
    width: 400px;
    height: 400px; 
    background-color: var(--color-black);
    border-radius: 200px; 
    top: 0; 
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    z-index: 95; 
}

#skill-circle-wrapper.shrink-to-head {
    /* 微调点 2: 头部缩小动画 */
    /* 尝试修改时长(1s)或速度曲线(cubic-bezier) */
    animation: shrink-to-head 1s ease-in-out forwards; /* 示例：换成 ease-in-out */
    z-index: 120;
}

/* 当 show-person 被添加时，触发身体的变形动画 */
#skill-circle-wrapper.show-person #person-body {
    opacity: 1;
    /* 微调点 3: 身体变形动画 */
    /* 确保这里的时长和速度曲线与头部动画匹配，以保证同步 */
    animation: transform-to-body 1s ease-in-out forwards; /* 示例：换成 ease-in-out */
}

@keyframes shrink-to-head {
    0% {
        transform: translateX(-50%) scale(1);
    }
    100% {
        transform: translateX(-50%) translateY(-200px) scale(0.5);
    }
}

/* 定义身体从圆形变形为躯干的动画 */
@keyframes transform-to-body {
    0% {
        height: 400px;
        border-radius: 200px;
        transform: translateX(-50%) translateY(0) scale(1);
    }
    100% {
        height: 600px; /* 高度变为2倍 */
        border-top-left-radius: 200px;
        border-top-right-radius: 200px;
        border-bottom-left-radius: 0; /* 底部变为直角 */
        border-bottom-right-radius: 0; /* 底部变为直角 */
        transform: translateX(-50%) translateY(400px) scale(1);
    }
}


#skill-circle-wrapper.show-person #person-body {
    /* 这个选择器现在用于触发动画，而不是直接设置最终状态 */
    opacity: 1;
    /* 确保这里的参数与上面的定义一致 */
    animation: transform-to-body 1s ease-in-out forwards; /* 示例：换成 ease-in-out */
}

#skill-bowl {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 200px;
    background-color: var(--color-black);
    /* 修改为开口向上的半圆 */
    border-bottom-left-radius: 200px;
    border-bottom-right-radius: 200px;
    z-index: 100; /* 确保碗在小球下面 */
}

.skill-ball {
    position: absolute;
    width: 100px; /* 尺寸小于圆环 */
    height: 100px;
    background-color: var(--color-light-gray);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-size-body);
    font-weight: var(--font-weight-body);
    color: var(--color-black);
    opacity: 0; /* 初始隐藏 */
    z-index: 110;
    pointer-events: none;
    transition: opacity 0.3s ease; /* 添加过渡效果 */
}

/* 为每个球定义掉落动画 */
.skill-ball.fall-1 { animation: fall-1 1.5s ease-in 0.0s forwards; }
.skill-ball.fall-2 { animation: fall-2 1.5s ease-in 0.2s forwards; }
.skill-ball.fall-3 { animation: fall-3 1.5s ease-in 0.4s forwards; }
.skill-ball.fall-4 { animation: fall-4 1.5s ease-in 0.6s forwards; }

/* 定义每个球的最终位置 */
@keyframes fall-1 {
    0% { opacity: 1; transform: translate(0, 0) scale(1); }
    100% { opacity: 1; transform: translate(250px, 470px) scale(0.9) rotate(-15deg); }
}
@keyframes fall-2 {
    0% { opacity: 1; transform: translate(0, 0) scale(1); }
    100% { opacity: 1; transform: translate(70px, 470px) scale(0.9) rotate(10deg); }
}
@keyframes fall-3 {
    0% { opacity: 1; transform: translate(0, 0) scale(1); }
    100% { opacity: 1; transform: translate(-100px, 470px) scale(0.9) rotate(-8deg); }
}
@keyframes fall-4 {
    0% { opacity: 1; transform: translate(0, 0) scale(1); }
    100% { opacity: 1; transform: translate(-280px, 470px) scale(0.9) rotate(15deg); }
}

/* 文字元素样式 */
#manchmal-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: var(--font-size-body);
    font-family: var(--font-family-body);
    font-weight: var(--font-weight-body);
    text-align: center;
    opacity: 0;
    z-index: 130; /* 确保在最上层 */
    transition: opacity 0.5s ease;
    pointer-events: none;
    width: 80%; /* 确保文字有合适的宽度限制 */
    line-height: 1.4; /* 增加行高，使分行文字更易读 */
}

/* 新增：用于控制新文本淡入效果的样式 */
#manchmal-text .new-text-part {
    opacity: 0;
    transition: opacity 0.8s ease-in-out;
}

/* 修改为文字顺时针旋转动画 */
#skill-circle-wrapper.flip-circle #manchmal-text {
    animation: text-rotate-animation 2s ease-in-out forwards;
}

@keyframes text-rotate-animation {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}

/* 移除圆形的旋转动画 */
#skill-circle-wrapper.flip-circle {
    /* 不再应用旋转动画 */
}

/* 恢复到圆形的动画 */
#skill-circle-wrapper.restore-circle {
    animation: restore-to-circle 1.5s ease-in-out forwards;
}

#skill-circle-wrapper.restore-circle #person-body {
    animation: restore-to-round 1.5s ease-in-out forwards;
}

/* 从小头部恢复到原始大小的动画 */
@keyframes restore-to-circle {
    0% {
        transform: translateX(-50%) translateY(-200px) scale(0.5);
    }
    100% {
        transform: translateX(-50%) scale(1);
    }
}

/* 从拉长身体恢复到完整圆形的动画 */
@keyframes restore-to-round {
    0% {
        height: 600px;
        border-top-left-radius: 200px;
        border-top-right-radius: 200px;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        transform: translateX(-50%) translateY(400px) scale(1);
    }
    100% {
        height: 400px;
        border-radius: 200px;
        transform: translateX(-50%) translateY(0) scale(1);
    }
}

/* 文字隐藏状态 */
#skill-circle-wrapper.text-hidden #manchmal-text {
    opacity: 0;
    transition: opacity 0.5s ease;
}

/* 确保重复人形动画时身体正确显示 */
#skill-circle-wrapper.text-hidden.show-person #person-body {
    opacity: 1;
    animation: transform-to-body 1s ease-in-out forwards;
}

/* 确保重复圆形缩小动画正确播放 */
#skill-circle-wrapper.text-hidden.shrink-to-head {
    animation: shrink-to-head 1s ease-in-out forwards;
}

/* 修改：提高选择器优先级，确保样式生效 */
#person-body.second-circle {
    position: absolute;
    top: 2050px; /* 与 #skill-circle-wrapper 初始位置相同 */
    left: 50%;
    transform: translateX(-50%);
    width: 400px;
    height: 400px;
    background-color: var(--color-black);
    border-radius: 200px;
    z-index: 110; /* 确保在 wrapper 下方，但在其他内容之上 */
    opacity: 1; /* 确保可见 */
}


/* 原始圆形向左移动的动画类 */
#skill-circle-wrapper.move-left {
    animation: move-circle-left 1.2s ease forwards;
}

/* 修改：让 .move-right 应用于 #person-body.second-circle */
#person-body.second-circle.move-right {
    animation: move-circle-right 1.2s ease forwards;
}

/* 原始圆形向左移动的动画 */
@keyframes move-circle-left {
    0% {
        transform: translateX(-50%);
        opacity: 1;
    }
    100% {
        transform: translateX(-120%);
        opacity: 1;
    }
}

/* 修改：第二个圆的动画，从中心开始 */
@keyframes move-circle-right {
    0% {
        transform: translateX(-50%); /* 从中心开始 */
        opacity: 1;
    }
    100% {
        transform: translateX(20%); /* 移动到右侧 */
        opacity: 1;
    }
}

/* 新增：眼睛椭圆样式 */
.eye-oval {
    position: absolute;
    top: 2250px; /* 垂直位置大致对齐圆形中心 */
    width: 200px;  /* 椭圆宽度 */
    height: 140px; /* 椭圆高度 (与圆形相同) */
    background-color: rgb(255, 255, 255);
    border-radius: 800px / 600px; /* 创建椭圆形状 */
    z-index: 115; /* 在黑色圆形之上 */
    transform: scale(0);
    transition: transform 1s ease-in-out;
    opacity: 1;
}

#left-eye {
    /* 定位在左圆的右侧 */
    left: calc(50% - 220px); 
}

#right-eye {
    /* 定位在右圆的左侧 */
    left: calc(50% + 20px); 
}

.eye-oval.appearing {
    transform: scale(1);
}

/* 新增：眼睛内部文字样式 */
.eye-text {
    position: absolute;
    top: 2280px; /* 与眼睛垂直对齐 */
    font-family: var(--font-family-body);
    font-size: var(--font-size-body);
    font-weight: var(--font-weight-body);
    color: var(--color-black);
    z-index: 120; /* 在白色椭圆之上 */
    line-height: 1.4;
    text-align: center;
    opacity: 0; /* 初始不可见 */
}

.eye-text.left-text {
    text-align: left;
    left: calc(50% - 140px);
    width: 200px;
    clip-path: inset(0 100% 0 0); /* 从右侧裁剪，初始不可见 */
    transition: clip-path 1.2s cubic-bezier(0.25, 1, 0.5, 1), opacity 0.5s;
}

.eye-text.right-text {
    text-align: right;
    left: calc(50% - 60px);
    width: 200px;
    clip-path: inset(0 0 0 100%); /* 从左侧裁剪，初始不可见 */
    transition: clip-path 1.2s cubic-bezier(0.25, 1, 0.5, 1), opacity 0.5s;
}

.eye-text.visible {
    opacity: 1;
    clip-path: inset(0 0 0 0); /* 移除裁剪，完全可见 */
    transition: opacity 0.5s ease, clip-path 1.2s cubic-bezier(0.25, 1, 0.5, 1);
}

/* 新增：圆形叠合动画 */
#skill-circle-wrapper.merge-back {
    animation: merge-circle-to-center 2s ease forwards;
}

#person-body.second-circle.merge-to-center {
    animation: merge-circle-from-right 2s ease forwards;
}

/* 定义从左侧移回中心的动画 */
@keyframes merge-circle-to-center {
    0% {
        transform: translateX(-120%);
        opacity: 1;
    }
    100% {
        transform: translateX(-50%);
        opacity: 1;
    }
}

/* 定义从右侧移回中心的动画 */
@keyframes merge-circle-from-right {
    0% {
        transform: translateX(20%);
        opacity: 1;
    }
    100% {
        transform: translateX(-50%);
        opacity: 1;
    }
}

/* 合并过程中显示的文本样式 - 简化版本 */
.merge-text {
    position: absolute;
    top: 2250px; 
    left: 50%;
    transform: translate(-50%, -50%);
    width: 300px;
    font-family: var(--font-family-body);
    font-size: var(--font-size-body);
    font-weight: var(--font-weight-body);
    text-align: center;
    color: white;
    z-index: 140;
    line-height: 1.5;
}